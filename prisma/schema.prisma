generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String          @id @default(cuid())
  name           String?
  email          String?         @unique
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  exports        Exports[]
  sessions       Session[]
  spotifyProfile SpotifyProfile?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model SpotifyProfile {
  id            String  @id @default(cuid())
  user_id       String  @unique
  display_name  String?
  external_urls String?
  href          String?
  images        String?
  product       String?
  type          String?
  uri           String?
  country       String?
  email         String?
  followers     Int?
  user          User    @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Exports {
  id          String   @id @default(cuid())
  user_id     String
  export_date DateTime
  export_data String
  successful  Boolean
  exportTo    String
  user        User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Example {
  id String @id
}
